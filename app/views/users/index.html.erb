<!DOCTYPE html>
<html lang="ja">
    <head>
        <script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
    </head>
    <body>
      <header>
        <nav>
          <div>
            <%= link_to 'revenge_cpt', logout_path %>
          </div>
          <div>
            <% if current_user %>
              <%= link_to 'ログアウト', logout_path, method: :delete %>
            <% elsif %>
              <%= link_to 'ログイン', login_path %>
            <% end %>
          </div>
        </nav>
      </header>
      <div id="app">
        <div class="task-groups">
          <div class="task-group-one-week">
            <button>one week<section>10</section></button>
          </div>
          <div class="task-group-one-month">
            <button>one month<section>10</section></button>
          </div>
          <div class="task-group-half-a-year">
            <button>half a year<section>10</section</button>
          </div>
          <div class="task-group-today-ac">
            <button>today AC<section>10/100</section</button>
          </div>
        </div>
        <confirm-url-component></confirm-url-component> 
        <div>
          <h2>一週間前に解いた問題</h2>
          <div>
            <table-component :solved_status="0" :x_days_ago="30"></table-component>
          </div>
        </div>
        <div>
          <h2>一ヵ月前に解いた問題</h2>
            <table-component :solved_status="1" :x_days_ago="30"></table-component>
          <div>
          </div>
        </div>
        <div>
          <h2>半年前に解いた問題</h2>
            <table-component :solved_status="2" :x_days_ago="30"></table-component>
        </div>
      </div>
        <script>
          Vue.component('table-component', {
              props: {
                solved_status: Number,
                x_days_ago: Number,

              },
              data: function() {
                return {tasks: []}
              },
            template: '\
              <table>\
                 <tr><th>No.</th><th>task</th><th></th></tr>\
                 <tr v-for="(task, index) in tasks" :key="task.id">\
                   <td>{{ index + 1}}</td>\
                    <td><a :href="task.url">{{  task.url }}</a></a></td>\
                   <td><button @click="update_task(task)">AC</button></td>\
                 </tr>\
              </table>',
            methods: {
              update_task: function(task) {
                const self = this
                const params = {
                  'id': task.id,
                  'status': task.status + 1,
                }
                axios
                  .put(
                      `http://localhost:3000/tasks/${task.id}`,
                      params
                  )
                  .then(function(response) {
                    console.log(response.data.message)
                    self.tasks = self.tasks.filter(target => target.id != task.id)
                  })
                  .catch(function(error) {
                    console.log('更新失敗')
                    console.log(error.response)
                  })
                  .finally(function() {
                    console.log('put-finally')
                  })
              },
              get_tasks: function() {
                const self = this
                const params = {
                  solved_status: this.solved_status,
                  x_days_ago: this.x_days_ago,
                }
                axios
                  .get(
                    `http://localhost:3000/tasks?solved_status=${this.solved_status}&x_days_ago=${this.x_days_ago}`,
                    params
                  )
                  .then(function(response) {
                    self.tasks = response.data
                  })
              },
            },
            mounted: function() {
              this.get_tasks()
            },
          })
          Vue.component('confirm-url-component', {
            data: function() {
              return {
                url: "",
                error_messages: []
              }
            },
            template: '\
              <div>\
                <div v-if="error_messages.length">\
                  <p v-for="(error_message, index) in error_messages" :key="index">{{ error_message }} </p>\
                </div>\
                <div>\
                  <input v-model="url">\
                  <button @click="confirm_url">確認</button>\
                </div>\
              </div>',
            methods: {
              confirm_url: function() {
                let url = this.url
                const self = this
                const params = {'url': this.url}
                axios
                  .post('http://localhost:3000/tasks', params)
                  .then(function(response) {
                    console.log(response.data.message)
                  })
                  .catch(function(error) {
                    console.log(error.response)
                    console.log(error.status)
                    error.response.data.messages.forEach(function(message) {
                      self.error_messages.push(message)
                      console.log(message)
                    })
                  })
                  .catch(function(error) {
                    console.log(error)
                  })
                  .finally(function(response) {
                  })
              }
            },
          })
          let s = new Vue({
            el: '#app',
          })
        </script>
        <style>
            table {width: 500px; border-collapse:collapse }
            tr {border: solid 1px black;}
            td {text-align: center;}
        </style>
    </body>
</html>
